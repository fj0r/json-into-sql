[node]
primary = ["id"]

[node.column]
id = { type = "serial" }
name = { type = "text" }
kind = { enum = ["common", "browser", "web"] }
data = { type = "jsonb" }

[[node.index]]
column = ["name"]
# type = "hash"
# include = ['a', 'b']
# with = {xxx= "yyy"}
[[node.uniq]]
column = ["name"]
#[[node.foreign]]
#column = { name = 'a', kind = 'b' }
#table = "Ooo"


# kind: browser
# action
# {type: goto, url: }
# {type: click, selector}

[flow]
primary = ["id"]

[flow.column]
id = { type = "serial" }
name = { type = "text", uniq = true }
head = { references = ["node", "id"] }
[[flow.index]]
column = ["name"]


[edge]
primary = ["flow_id", "income", "outgo"]

[edge.column]
flow_id = { references = ["flow", "id"] }
income = { references = ["node", "id"] }
outgo = { references = ["node", "id"] }
data = { type = "jsonb" }

[[edge.index]]
column = ["flow_id", "income", "outgo"]

[ua]
primary = ["id"]

[ua.column]
id = { type = "serial" }
name = { type = "text", uniq = true }
data = { type = "text" }
valid = { type = "boolean", default = 'true' }
created = { type = "timestamp", default = "now()" }
updated = { type = "timestamp", default = "now()" }
[[ua.index]]
column = ["name"]

[proxy]
primary = ["id"]

[proxy.column]
id = { type = "serial" }
name = { type = "text", uniq = true }
protocol = { enum = ["http","https","socks4","socks5"] }
addr = { type = "text" }
port = { type = "int4" }
username = { type = "text" }
password = { type = "text" }
valid = { type = "boolean", default = 'true' }
created = { type = "timestamp", default = "now()" }
updated = { type = "timestamp", default = "now()" }

[[proxy.index]]
column = ["name"]

[tasks]
primary = ["id"]

[tasks.column]
id = { type = "serial" }
start = { type = "timestamp", default = "now()" }
stop = { type = "timestamp" }
flow = { references = ["flow","id"] }
context = { type = "jsonb", default = '{}' }

[steps.column]
task_id = { references = ["tasks","id"] }
node_id = { references = ["node","id"] }
start = { type = "timestamp", default = "now()" }
stop = { type = "timestamp" }
data = { type = "jsonb" }
error = { type = "jsonb" }
[[steps.index]]
column = ["task_id","node_id"]
